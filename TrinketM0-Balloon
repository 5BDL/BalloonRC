# Trinket M0 Balloon RC

import board
import time
from digitalio import DigitalInOut, Direction, Pull
from analogio import AnalogOut, AnalogIn
import pulseio
import adafruit_irremote
import adafruit_dotstar
from adafruit_motor import servo

## Hardware Configuration
# Define Servo Motor
pwm = pulseio.PWMOut(board.D2, duty_cycle=2 ** 15, frequency=50)
my_servo = servo.Servo(pwm)

# Define IR Receiver
IR = pulseio.PulseIn(board.D3, maxlen = 200, idle_state = True)

# Define IR Decoder
decoder = adafruit_irremote.GenericDecode()

# Built in red LED
led = DigitalInOut(board.D13)
led.direction = Direction.OUTPUT

# Dotstar OnBoard LED
balloon_led = adafruit_dotstar.DotStar(board.APA102_SCK, board.APA102_MOSI, 1)
balloon_led.brightness = 1.0

## Software Configuration
# Global Variables

start_angle = 35
angle_stop = 60
angle_left = 70
angle_right = 0
forward_sleep = 0.1
forward_start_sleep = 0.05
turn_sleep = 0.05
turn_step = 5
angle_step_a = 6
angle_step_b = -6
forward_button = '5'
left_button = '7'
right_button = '8'
balloon_code = 0
forward_code = [0, 0, 255, balloon_code]
right_code = [0, 255, 0, balloon_code]
left_code = [255, 0, 0, balloon_code]

# Function Definitions
def forward_start():
    for angle in range(0, angle_stop, angle_step_a):
        my_servo.angle = angle
        time.sleep(forward_start_sleep)
        print("Angle = %0.2f" % angle)
    for angle in range(angle_stop, 0, angle_step_b):
        my_servo.angle = angle
        time.sleep(forward_start_sleep)
        print("Angle = %0.2f" % angle)

def forward():
    my_servo.angle = angle_left
    time.sleep(forward_sleep)
    my_servo.angle = angle_right
    time.sleep(forward_sleep)

def left():
    my_servo.angle = angle_left
    time.sleep(turn_sleep)
        # print("Left Button Pressed, Angle = %0.2f" % angle)

def right():
    my_servo.angle = angle_right
    time.sleep(turn_sleep)

def identify():
    if balloon_code == 0:
        id_color = (255,0,0)
    elif balloon_code == 100:
        id_color = (0,255,0)
    elif balloon_code == 200:
        id_color = (0,0,255)
    elif balloon_code == 300:
        id_color = (255,255,255)
    return id_color

######################### MAIN LOOP ##############################

while True:
    # forward_start()
    id_color = identify()
    balloon_led[0] = id_color
    
    my_servo.angle = start_angle
    pulses = decoder.read_pulses(IR)
    try:
        # Attempt to convert received pulses into numbers
        received_code = decoder.decode_bits(pulses)
    except adafruit_irremote.IRNECRepeatException:
        # We received an unusual short code, probably a repeat signal
        continue
    except adafruit_irremote.IRDecodeException as e:
        # Something went wrong or maybe just not an NEC type
        continue

    print("NEC Infrared Code Received: ", received_code)

    if received_code == forward_code:
        print("Forward Button Received")
        forward()
    elif received_code == right_code:
        print("Right Button Received")
        right()
    elif received_code == left_code:
        print("Left Button Received")
        left()
